CREATE OR REPLACE PROCEDURE COMPUTEXORHASH(
    p_string IN VARCHAR2,
    p_key IN OUT BINARY(16)
)
AS 
I INT DEFAULT 1;
LEN INT;
POS INT;
CHAR_CODE BYTE;
CURR_BYTE BYTE;
NEWBYTE BYTE;
BEGIN
    LEN := LENGTH(p_string);
    RESULT := 0x00000000000000000000000000000000;

    WHILE I <= LEN LOOP
        CHAR_CODE := ASCII(SUBSTRING(p_string, I));
        POS := ((I - 1) % 16) * 2 + 1;

        CURR_BYTE := SUBSTRING(p_key, POS, 2);
        NEWBYTE := CURR_BYTE XOR CHAR_CODE;

        RESULT := HEXTORAW(CONCAT(SUBSTRING(RESULT, 1, POS - 1), 
            CHARTOBIN(CHAR(NEWBYTE)), SUBSTRING(RESULT, POS + 2)));

        I := I + 1;
    END LOOP;
END;
/

CREATE OR REPLACE FUNCTION AES_ENCRYPT(
    p_string IN CLOB,
    p_key VARCHAR2
)
RETURN VARBINARY
AS
    v_key BINARY(16);
    V_RETURN_STR BLOB;
    V_TYPE INT;
BEGIN
    COMPUTEXORHASH(p_key, v_key);
    V_TYPE := DBMS_CRYPTO.ENCRYPT_AES128 + DBMS_CRYPTO.CHAIN_CBC + DBMS_CRYPTO.PAD_PKCS5;
    CALL DBMS_CRYPTO.ENCRYPT(V_RETURN_STR, p_string, V_TYPE, v_key);

    RETURN V_RETURN_STR;
END;
/

CREATE OR REPLACE FUNCTION AES_DECRYPT(
    p_string IN BLOB,
    p_key VARCHAR2
)
RETURN VARBINARY
AS
    v_key BINARY(16);
    V_RETURN_STR CLOB;
    V_TYPE INT;
BEGIN
    COMPUTEXORHASH(p_key, v_key);
    V_TYPE := DBMS_CRYPTO.ENCRYPT_AES128 + DBMS_CRYPTO.CHAIN_CBC + DBMS_CRYPTO.PAD_PKCS5;
    CALL DBMS_CRYPTO.DECRYPT(V_RETURN_STR, p_string, V_TYPE, v_key);

    RETURN V_RETURN_STR;
END;
/